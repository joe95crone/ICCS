#================================================================# AUTHORS: E. Johnson, R. Kelmar and B. Terzic (August 2016)# PURPOSE: Compute backscattered spectra for the Duke Compton # source as shown in Sun et al. 2009 (PR STAB 12, 062801) Fig. 2#================================================================import matplotlib.pyplot as pltimport numpy as npimport randomimport multiprocessing as mpimport sysq = 1.602e-19             # electron charge (C)Q = 1e-11N = Q/qa0 = 0.09a0old = 0.05cnst = ((a0/a0old)**2)*Nprint cnst#-----------------------------# Read data from a file#-----------------------------x1=[]y1=[]x2=[]y2=[]x3=[]y3=[]x4=[]y4=[]x5=[]y5=[]d1  = np.loadtxt('output_0.25.txt')d2  = np.loadtxt('output_0.5.txt')d3  = np.loadtxt('output_1.txt')d4  = np.loadtxt('output_1.5.txt')#d5  = np.loadtxt('output_2.txt')Npts = len(d1[:,0]) for i in range(0, Npts):    x1.append(d1[i,0])    y1.append(cnst*d1[i,1])    x2.append(d2[i,0])    y2.append(cnst*d2[i,1])    x3.append(d3[i,0])    y3.append(cnst*d3[i,1])Npts2 = len(d4[:,0]) for i in range(0, Npts2):    x4.append(d4[i,0])    y4.append(cnst*d4[i,1])#    x5.append(d5[i,0])#    y5.append(cnst*d5[i,1])#--------------------------------------------------------------------------# PLOT#--------------------------------------------------------------------------print "Now generating figures..."plt.subplots_adjust(left=0.14,bottom=0.14,right=0.9                   ,top=0.9,wspace=0.5,hspace=0.35)plt.tick_params(axis='both', labelsize=14, pad=7)#plt.yscale('log')#plt.title('Sun et al. 2009: Figure 2')plt.xlabel(r"$E'$  [keV]", size=14)#plt.ylabel('Scattered photon energy density dE/d\omega [a.u.]')#plt.ylabel(r'$dN/d\omega$ [a.u.]', size=14)#plt.ylabel(r'$dN/d\omega \times 10^{-4}$ [s]', size=14)plt.ylabel(r"$dN/dE'$"+'  [eV'+r'$^{-1}$'+']', size=14)#plt.grid()plt.yscale('log')plt.axis([11.3, 12.6, 1e-11, 1e3])figure = plt.gcf()figure.set_size_inches(8, 6)plt.plot(x1,y1,color='k',lw=1.5)plt.plot(x2,y2,color='b',lw=1.5)plt.plot(x3,y3,color='g',lw=1.5)plt.plot(x4,y4,color='r',lw=1.5)#plt.plot(x5,y5,color='r',lw=1.5)leg = plt.legend((\       r'$\theta_a=1/40\gamma$', \       r'$\theta_a=1/20\gamma$', \       r'$\theta_a=1/10\gamma$', \       r'$\theta_a=3/20\gamma$'), \#       r'$\theta_a=1/5\gamma$'), \       'upper left', shadow=False)plt.savefig('Kirsten_distribution_aperture.eps',format='eps')plt.show()